import com.amazonaws.auth.profile.ProfileCredentialsProvider

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.656'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31' apply false
}

ext {
    kotlin_version = '1.5.31'

    try {
        awsCredentials = new ProfileCredentialsProvider().credentials
    } catch(ignored) {
        awsCredentials = null
    }
}

subprojects {
    group 'io.gatehill.imposter'
    version '1.24.5'

    buildscript {
        ext {
            version_shadow = '5.1.0'
        }
        repositories {
            mavenCentral()
            maven {
                url "https://plugins.gradle.org/m2/"
            }
        }
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
            classpath "com.github.jengelman.gradle.plugins:shadow:$version_shadow"
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    ext {
        mavenSnapshotRepository = 's3://gatehillsoftware-maven/snapshots'
        mavenReleaseRepository = 's3://gatehillsoftware-maven/releases'

        awsAccessKey = awsCredentials?.AWSAccessKeyId ?: System.getenv('AWS_ACCESS_KEY_ID') ?: project.findProperty('AWS_ACCESS_KEY_ID')
        awsSecretKey = awsCredentials?.AWSSecretKey ?: System.getenv('AWS_SECRET_ACCESS_KEY') ?: project.findProperty('AWS_SECRET_ACCESS_KEY')

        version_args4j = '2.33'
        version_commons_io = '2.9.0'
        version_commons_text = '1.9'
        version_guice = '4.1.0'
        version_jackson = '2.12.5'
        version_junit = '4.12'
        version_log4j = '2.9.1'
        version_micrometer = '1.6.7'
        version_restAssured = '2.9.0'
        version_testcontainers = '1.15.3'
        version_vertx = '3.7.1'
    }
}

wrapper {
    gradleVersion = '6.8.1'
}
