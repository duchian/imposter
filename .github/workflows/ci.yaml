name: CI
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8', '11' ]
    permissions:
      contents: write
    env:
      AWS_REGION: "eu-west-1"
      TESTCONTAINERS_RYUK_DISABLED: "true"
      CONTAINER_BUILDER: "buildx"
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          platforms: arm64,arm

      - name: Disable gradle daemon
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties

      - name: Test
        run: ./gradlew test --info --stacktrace

      - name: Build distributions
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' }}
        run: |
          chmod +x ./scripts/*.sh
          ./gradlew dist --info --stacktrace

      - name: Build Docker images
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/spike/multi-arch') && matrix.java == '8' }}
        run: |
          case "$( git branch --show-current )" in
            develop)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            spike/multi-arch)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            *)
              EFFECTIVE_BRANCH_NAME="main"
              ;;
          esac
          
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh ${EFFECTIVE_BRANCH_NAME} )"

          case ${EFFECTIVE_BRANCH_NAME} in
            develop)
              if [[ ! -z ${IMAGE_TAG_NAME} ]]; then
                ./scripts/docker-build.sh -p false "${IMAGE_TAG_NAME}"
              fi
            ;;

            main)
              CURRENT_VERSION="$( git describe --tags --exact-match )"
              if [[ "${CURRENT_VERSION:0:1}" == "v" ]]; then
                CURRENT_VERSION="$( echo ${CURRENT_VERSION} | cut -c 2- )"
              fi
              ./scripts/docker-build.sh -p false "${CURRENT_VERSION}"
              ./scripts/docker-build.sh -p false "latest"
            ;;
          esac

      - name: Integration test
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/spike/multi-arch') && matrix.java == '8' }}
        run: |
          case "$( git branch --show-current )" in
            develop)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            spike/multi-arch)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            *)
              EFFECTIVE_BRANCH_NAME="main"
              ;;
          esac
          
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh $EFFECTIVE_BRANCH_NAME )"
          ./scripts/integration-tests.sh "${IMAGE_TAG_NAME}"

      - name: Push Docker images
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/spike/multi-arch') && matrix.java == '8' }}
        run: |
          case "$( git branch --show-current )" in
            develop)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            spike/multi-arch)
              EFFECTIVE_BRANCH_NAME="develop"
              ;;
            *)
              EFFECTIVE_BRANCH_NAME="main"
              ;;
          esac
          
          IMAGE_TAG_NAME="$( ./scripts/branch-to-tag-name.sh ${EFFECTIVE_BRANCH_NAME} )"

          case ${EFFECTIVE_BRANCH_NAME} in
            develop)
              if [[ ! -z ${IMAGE_TAG_NAME} ]]; then
                ./scripts/docker-build.sh -p true "${IMAGE_TAG_NAME}"
              fi
            ;;

            main)
              CURRENT_VERSION="$( git describe --tags --exact-match )"
              if [[ "${CURRENT_VERSION:0:1}" == "v" ]]; then
                  CURRENT_VERSION="$( echo ${CURRENT_VERSION} | cut -c 2- )"
              fi
              ./scripts/docker-build.sh -p true "${CURRENT_VERSION}"
              ./scripts/docker-build.sh -p true "latest"
            ;;
          esac
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Release Java 8 assets
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.java == '8' }}
        uses: actions/github-script@v5
        with:
          script: |
            const script = require('./.github/github-release.js')
            await script({github, context}, [
              'main',
              './distro/awslambda/build/libs/imposter-awslambda.jar',
              './mock/hbase/build/libs/imposter-plugin-mock-hbase.jar',
              './mock/sfdc/build/libs/imposter-plugin-mock-sfdc.jar',
              './mock/soap/build/libs/imposter-plugin-mock-soap.jar',
              './store/dynamodb/build/libs/imposter-plugin-store-dynamodb.jar',
              './store/redis/build/libs/imposter-plugin-store-redis.jar',
              './store/graphql/build/libs/imposter-plugin-store-graphql.jar',
            ])

      - name: Release Java 11 assets
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.java == '11' }}
        uses: actions/github-script@v5
        with:
          script: |
            const script = require('./.github/github-release.js')
            await script({github, context}, [
              './scripting/nashorn-standalone/build/libs/imposter-plugin-js-nashorn-standalone.jar',
            ])

      - name: Publish Maven artifacts
        if: ${{ (startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/develop') && matrix.java == '8' }}
        run: ./gradlew publish --info --stacktrace
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
